<Window x:Class="toramado.SubWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:toramado"
        mc:Ignorable="d"
        Title="toramado" 
        Visibility="Visible" 
        BorderThickness="1" 
        AllowDrop="True" 
        BorderBrush="#FF0074FF" 
        AllowsTransparency="True" 
        WindowStyle="None" 
        ResizeMode="CanResizeWithGrip" 
        Background="Transparent"  
        Foreground="{x:Null}" 
        WindowStartupLocation="Manual" 
        Width="{Binding Path=width}" 
        Height="{Binding Path=height}" 
        MinWidth="128" 
        MinHeight="48">

    <Window.CommandBindings>
        <CommandBinding Command="{x:Static SystemCommands.MinimizeWindowCommand}" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed_1" />
        <CommandBinding Command="{x:Static SystemCommands.MaximizeWindowCommand}" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed_3" />
    </Window.CommandBindings>

    <Window.InputBindings>
        <KeyBinding Command="{Binding ScreenOCRCommand}" Key ="{Binding ScreenOCR_Gesture.Key}" Modifiers="{Binding ScreenOCR_Gesture.Modifiers}"></KeyBinding>
        <KeyBinding Command="{Binding QuickTranslationCommand}" Key ="{Binding QuickTranslationGesture.Key}" Modifiers="{Binding QuickTranslationGesture.Modifiers}"></KeyBinding>
    </Window.InputBindings>

    <Window.Resources>
        <Style x:Key="resizeWindowICO" TargetType="Path">
            <Setter Property="Data" Value="m 13 14 -6 0 0 -5 0 -5 6 0 6 0 0 5 0 5 -6 0 z m 0 -1 5 0 0 -3.5 0 -3.5 -5 0 -5 0 0 3.5 0 3.5 5 0 z" />
            <Setter Property="Margin" Value="11,6,0,0" />
            <Setter Property="Stretch" Value="Fill" />
            <Setter Property="Width" Value="10" />
            <Setter Property="Height" Value="8" />
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="OpacityMask" Value="{x:Null}" />
            <Setter Property="Stroke" Value="{x:Null}" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsMouseOver, ElementName=resizeWindowICO, Mode=OneWay}" Value="False">
                    <Setter Property="Fill" Value="#FF767676"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsMouseOver, ElementName=resizeWindowICO, Mode=OneWay}" Value="true">
                    <Setter Property="Fill" Value="White"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsChecked, ElementName=resizeWindowICO, Mode=OneWay}" Value="true">
                    <Setter Property="Data" Value="m 12 14 -4 0 0 -4 0 -4 4 0 4 0 0 4 0 4 -4 0 z m 0 -1 3 0 0 -2.5 0 -2.5 -3 0 -3 0 0 2.5 0 2.5 3 0 z m 5.5 -1 C 17.225 12 17 10.452164 17 8.5603653 L 17 5.1207305 13.25 4.7284684 9.5 4.3362062 13.75 4.1681031 18 4 18 8 c 0 2.2 -0.225 4 -0.5 4 z" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <ControlTemplate x:Key="MenuItemControlTemplate1" TargetType="{x:Type MenuItem}">
            <Border x:Name="MenuItemBg"
        		Background="{TemplateBinding Background}" 
        		SnapsToDevicePixels="True">
                <Grid Height="22" Width="22">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Width="50"/>
                    <Popup x:Name="PART_Popup"  AllowsTransparency="True" Focusable="False" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom">
                        <Border x:Name="SubMenuBorder" BorderBrush="#FF0074FF" BorderThickness="1" Background="#3A3A3A">
                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                        </Border>
                    </Popup>
                </Grid>
            </Border>
        </ControlTemplate>

        <ControlTemplate x:Key="InnerMenuItemControlTemplate" TargetType="{x:Type MenuItem}">
            <Border Name="border" BorderThickness="2" Background="#3F3F46">
                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Border>

            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="border" Property="BorderBrush" Value="gray"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter TargetName="border" Property="Opacity" Value="0.56"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>


        <Style x:Key="InnerMenuItemStyle" TargetType="{x:Type MenuItem}">
            <Setter Property="Template" Value="{StaticResource InnerMenuItemControlTemplate}"/>
            <Setter Property="Foreground" Value="Gray"/>
        </Style>

        <Style x:Key="{x:Type TextBox}" TargetType="TextBox">
            <Setter Property="Background" Value="#3F3F46"/>
            <Setter Property="SelectionBrush" Value="Black"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border"  Background="#3F3F46" BorderBrush="Black"  SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF7EB4EA"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="Yellow"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="buttonTemplate" TargetType="{x:Type Button}">

            <Border Name="border" BorderThickness="2" Background="#3F3F46">
                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Border>

            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="border" Property="BorderBrush" Value="gray"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter TargetName="border" Property="Opacity" Value="0.56"/>
                </Trigger>
            </ControlTemplate.Triggers>

        </ControlTemplate>

        <Style x:Key="{x:Type Button}" TargetType="{x:Type Button}">
            <Setter Property="Template" Value="{StaticResource buttonTemplate}"/>
            <Setter Property="Foreground" Value="#FFB9B9B9"/>
        </Style>
    </Window.Resources>

    <Grid Background="Transparent">
        <DockPanel Name="top_panel" Height="26" DockPanel.Dock="Top" Margin="0" VerticalAlignment="Top" Background="#2A2A2A" Panel.ZIndex="0">
            <Menu Width="24" Height="24" VerticalAlignment="Top" Panel.ZIndex="2">
                <Menu.Background>
                    <VisualBrush Stretch="Uniform" AlignmentX="Left" AlignmentY="Bottom">
                        <VisualBrush.Visual>
                            <Path xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Name="tes_icoPath001" Fill="#FF757576" Data="M 6 21 5 21 5 12 5 3 3 3 1 3 1 2 1 1 9.5 1 18 1 18 2 18 3 12.5 3 7 3 l 0 9 0 9 -1 0 z m 7 0 -4 0 0 -1 0 -1 3 0 3 0 0 -2 0 -2 3 0 3 0 0 1 0 1 -2 0 -2 0 0 2 0 2 -4 0 z M 12.5 14 8 14 8 9 8 4 l 4.5 0 4.5 0 0 3 0 3 -3.5 0 -3.5 0 0 1 0 1 3.5 0 3.5 0 0 1 0 1 -4.5 0 z m 0 -6 2.5 0 0 -1 0 -1 -2.5 0 -2.5 0 0 1 0 1 2.5 0 z" Width="22" Height="22" Margin="1,1,0,0"/>
                        </VisualBrush.Visual>
                    </VisualBrush>
                </Menu.Background>
                <MenuItem Background="Transparent" Width="24" Height="24" Template="{DynamicResource MenuItemControlTemplate1}" Foreground="White" >
                    <MenuItem Style="{Binding Path=InnerMenuItemStyle}" InputGestureText="{Binding ScreenOCR_GestureText}" 
                              Header="{Binding ScreenOCR_Text}" Command="{Binding ScreenOCRCommand}" />
                    <MenuItem Style="{Binding Path=InnerMenuItemStyle}" InputGestureText="{Binding QuickTranslationGestureText}" 
                              Header="{Binding QuickTranslationText}" Command="{Binding QuickTranslationCommand}" />
                    <Separator />
                    <MenuItem Header="_Exit" Style="{Binding Path=InnerMenuItemStyle}" />
                </MenuItem>
            </Menu>

            <Button Width="32" HorizontalAlignment="Right"  DockPanel.Dock="Right" Click="Exit" Margin="0,0,0,6">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="false">
                                <Setter Property="Background" Value="Transparent" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="#AAFF008B" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="false">
                                <Setter Property="Foreground" Value="#FF767676" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <Button.Template>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Viewbox>
                                <Canvas Width="32" Height="20">
                                    <Path Fill="{TemplateBinding Background}" Data="m 0 0 32 0 0 20 -32 0 0 -20 z" Margin="0"/>
                                    <Canvas Width="32" Height="20">
                                        <Path Fill="{TemplateBinding Property=Foreground}" Data="F1 M26.9166,22.1667 L37.9999,33.25 49.0832,22.1668 58.708481,22.035264 42.7499,38 58.537295,53.833401 49.0833,53.8334 37.9999,42.75 26.9166,53.8334 17.51947,53.833931 33.25,38 17.519011,22.16776 26.9166,22.1667 z" Margin="11,6,0,0" Stretch="Fill" Width="10" Height="8" HorizontalAlignment="Right" OpacityMask="{x:Null}" Stroke="{x:Null}"/>
                                    </Canvas>
                                </Canvas>
                            </Viewbox>
                        </Grid>
                    </ControlTemplate>
                </Button.Template>
            </Button>
            <ToggleButton x:Name="resizeWindowICO" Width="32" HorizontalAlignment="Right"  DockPanel.Dock="Right" Height="20" VerticalAlignment="Top" Command="{x:Static SystemCommands.MaximizeWindowCommand}" CommandParameter="{Binding ElementName=target}">
                <ToggleButton.Style>
                    <Style TargetType="{x:Type ToggleButton}">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="false">
                                <Setter Property="Background" Value="Transparent" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="#AA3399FF" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="false">
                                <Setter Property="Foreground" Value="#FF767676" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ToggleButton.Style>
                <ToggleButton.Template>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid>
                            <Viewbox Stretch="Fill">
                                <Canvas Width="32" Height="20">

                                    <Path Fill="{TemplateBinding Background}" Data="m 0 0 32 0 0 20 -32 0 0 -20 z" Margin="0"/>
                                    <Canvas Width="32" Height="20">
                                        <Path Style="{StaticResource resizeWindowICO}"/>
                                    </Canvas>
                                </Canvas>
                            </Viewbox>
                        </Grid>
                    </ControlTemplate>
                </ToggleButton.Template>
            </ToggleButton>
            <Button Width="32" HorizontalAlignment="Right"  DockPanel.Dock="Right" Height="20" VerticalAlignment="Top" Command="{x:Static SystemCommands.MinimizeWindowCommand}" CommandParameter="{Binding ElementName=target}">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="false">
                                <Setter Property="Background" Value="Transparent" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="#AA3399FF" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="false">
                                <Setter Property="Foreground" Value="#FF767676" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <Button.Template>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Viewbox Stretch="Fill">
                                <Canvas Width="32" Height="20">
                                    <Path Fill="{TemplateBinding Property=Background}" Data="m 0 0 32 0 0 20 -32 0 0 -20 z" Margin="0"/>
                                    <Canvas Width="32" Height="20">
                                        <Path Fill="{TemplateBinding Property=Foreground}" Data="m 13 13 -4 0 0 -1 0 -1 4 0 4 0 0 1 0 1 -4 0 z" Margin="11,12,0,0" Stretch="Fill" Width="10" Height="1.6" HorizontalAlignment="Right" OpacityMask="{x:Null}" Stroke="{x:Null}"/>
                                    </Canvas>
                                </Canvas>
                            </Viewbox>
                        </Grid>
                    </ControlTemplate>
                </Button.Template>
            </Button>
            <ComboBox x:Name="LangComboBox" Width="83"
                      ItemsSource="{Binding Path=LangList}" DisplayMemberPath="{Binding Path=DisplayName}" 
                      SelectedValuePath="{Binding Path=LangTag}" SelectedValue="{Binding Path=UserProfileLang}"
                      SelectedItem="{Binding Path=SelectedItem}" />
        </DockPanel>

        <StatusBar Name="bottom_panel" Height="20" VerticalAlignment="Bottom" Background="#FF0074FF" Foreground="White">
            <StatusBarItem>
                <TextBlock Text="{Binding Path=Info}" />
            </StatusBarItem>
        </StatusBar>

    </Grid>
</Window>
