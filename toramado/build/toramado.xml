<?xml version="1.0"?>
<doc>
    <assembly>
        <name>toramado</name>
    </assembly>
    <members>
        <member name="T:OCR">
            <summary>
            文字認識関数コレクション
            </summary>
        </member>
        <member name="M:OCR.UwpOcrEngineWithPostProcessing(Windows.Graphics.Imaging.SoftwareBitmap,Windows.Globalization.Language)">
            <summary>
            WindowsのOCRエンジンによる文字認識及び, 後処理を実行
            </summary>
            <param name="softwareBitmap">ビットマップ</param>
            <param name="languageCode">言語コード</param>
            <returns>テキスト</returns>
        </member>
        <member name="T:Translation">
            <summary>
            翻訳関数コレクション
            </summary>
        </member>
        <member name="M:Translation.OnlineGoogleTranslation(System.String,System.String,System.String)">
            <summary>
            オンラインのGoogle翻訳APIによる翻訳
            </summary>
            <param name="sourceText">翻訳対象のテキスト</param>
            <param name="sourceLanguageCode">翻訳対象の属する言語コード</param>
            <param name="targetLanguageCode">翻訳先の言語コード</param>
            <returns>テキスト</returns>
        </member>
        <member name="T:Utils">
            <summary>
            ユーティリティ
            </summary>
        </member>
        <member name="M:Utils.GetHtmlAsync(System.Uri)">
            <summary>
            GETメソッドのハンドリング
            </summary>
            <param name="uri">リクエストUri</param>
            <returns>翻訳結果</returns>
        </member>
        <member name="F:toramado.RelayCommand.execute">
            <summary>
            Encapsulated the execute action
            </summary>
        </member>
        <member name="F:toramado.RelayCommand.canExecute">
            <summary>
            Encapsulated the representation for the validation of the execute method
            </summary>
        </member>
        <member name="M:toramado.RelayCommand.#ctor(System.Action{System.Object})">
            <summary>
            Initializes a new instance of the RelayCommand class
            Creates a new command that can always execute.
            </summary>
            <param name="execute">The execution logic.</param>
        </member>
        <member name="M:toramado.RelayCommand.#ctor(System.Action{System.Object},System.Predicate{System.Object})">
            <summary>
            Initializes a new instance of the RelayCommand class
            Creates a new command.
            </summary>
            <param name="execute">The execution logic.</param>
            <param name="canExecute">The execution status logic.</param>
        </member>
        <member name="E:toramado.RelayCommand.CanExecuteChanged">
            <summary>
            An event to raise when the CanExecute value is changed
            </summary>
            <remarks>
            Any subscription to this event will automatically subscribe to both 
            the local OnCanExecuteChanged method AND
            the CommandManager RequerySuggested event
            </remarks>
        </member>
        <member name="E:toramado.RelayCommand.CanExecuteChangedInternal">
            <summary>
            An event to allow the CanExecuteChanged event to be raised manually
            </summary>
        </member>
        <member name="M:toramado.RelayCommand.CanExecute(System.Object)">
            <summary>
            Defines if command can be executed
            </summary>
            <param name="parameter">the parameter that represents the validation method</param>
            <returns>true if the command can be executed</returns>
        </member>
        <member name="M:toramado.RelayCommand.Execute(System.Object)">
            <summary>
            Execute the encapsulated command
            </summary>
            <param name="parameter">the parameter that represents the execution method</param>
        </member>
        <member name="M:toramado.RelayCommand.OnCanExecuteChanged">
            <summary>
            Raises the can execute changed.
            </summary>
        </member>
        <member name="M:toramado.RelayCommand.Destroy">
            <summary>
            Destroys this instance.
            </summary>
        </member>
        <member name="M:toramado.RelayCommand.DefaultCanExecute(System.Object)">
            <summary>
            Defines if command can be executed (default behaviour)
            </summary>
            <param name="parameter">The parameter.</param>
            <returns>Always true</returns>
        </member>
        <member name="T:toramado.MainViewModel">
            <summary>
            エントリ・ポイント・クラス（翻訳ウィンドウについてのロジック）
            </summary>
        </member>
        <member name="M:toramado.MainViewModel.#ctor">
            <summary>
            メイン・エントリ・ポイント
            </summary>
        </member>
        <member name="P:toramado.MainViewModel.OCRedText">
            <summary>
            認識されたテキストの保持／表示プロパティ
            </summary>
        </member>
        <member name="P:toramado.MainViewModel.TranslatedText">
            <summary>
            翻訳されたテキストの保持／表示プロパティ
            </summary>
        </member>
        <member name="T:toramado.MainWindow">
            <summary>
            MainWindow.xaml の相互作用ロジック
            </summary>
            <summary>
            MainWindow
            </summary>
        </member>
        <member name="M:toramado.MainWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:toramado.App">
            <summary>
            Interaction logic for App.xaml
            </summary>
            <summary>
            App
            </summary>
        </member>
        <member name="M:toramado.App.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:toramado.App.Main">
            <summary>
            Application Entry Point.
            </summary>
        </member>
        <member name="T:toramado.SubViewModel">
            <summary>
             エントリ・ポイント・クラス（キャプチャウィンドウについてのロジック）
            </summary>
        </member>
        <member name="M:toramado.SubViewModel.#ctor">
            <summary>
            サブ（メイン2）・エントリ・ポイント
            </summary>
        </member>
        <member name="T:toramado.SubWindow">
            <summary>
            SubWindow.xaml の相互作用ロジック
            </summary>
            
            <summary>
            SubWindow
            </summary>
        </member>
        <member name="M:toramado.SubWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:toramado.Properties.Resources">
            <summary>
              ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。
            </summary>
        </member>
        <member name="P:toramado.Properties.Resources.ResourceManager">
            <summary>
              このクラスで使用されているキャッシュされた ResourceManager インスタンスを返します。
            </summary>
        </member>
        <member name="P:toramado.Properties.Resources.Culture">
            <summary>
              すべてについて、現在のスレッドの CurrentUICulture プロパティをオーバーライドします
              現在のスレッドの CurrentUICulture プロパティをオーバーライドします。
            </summary>
        </member>
        <member name="T:Capture">
            <summary>
            キャプチャ関数コレクション
            </summary>
        </member>
        <member name="M:Capture.CaptureAsSoftwareBitmap(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            指定範囲のキャプチャ画像をSoftwareBitmap型として得る
            </summary>
            <param name="left">キャプチャ範囲の左端端x座標</param>
            <param name="top">キャプチャ範囲の左端端y座標</param>
            <param name="height">キャプチャ範囲の高さ</param>
            <param name="width">キャプチャ範囲の幅</param>
            <returns>指定された範囲のキャプチャ画像</returns>
        </member>
    </members>
</doc>
